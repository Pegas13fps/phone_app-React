{"version":3,"sources":["components/Filter.js","components/Cart.js","components/Phone.js","components/API.js","components/Catalog.js","components/Viewer.js","App.js","serviceWorker.js","index.js"],"names":["Filter","props","react_default","a","createElement","className","data-element","onChange","queryChange","orderChange","value","Cart","Object","entries","name","map","_ref","_ref2","slicedToArray","item","index","key","onClick","onDeletePhone","Phone","id","image","snippet","onLinkClicked","onAddClick","data-phone-id","href","alt","src","API_URL","PhonesService","getAll","_getAll","asyncToGenerator","regenerator_default","mark","_callee","_ref$query","query","_ref$order","order","result","response","filteredResult","_args","arguments","wrap","_context","prev","next","length","undefined","window","fetch","sent","json","t0","filter","phone","toLowerCase","includes","t1","sort","b","age","abrupt","localeCompare","stop","apply","this","getById","then","Catalog","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","phones","_this2","data","setState","_this$props","onPhoneClicked","onAddClicked","components_Phone","imageUrl","renderPhones","React","Component","Viewer","mainImage","images","description","_this3","img","i","phoneId","selectImage","_this$state$phone","onBackClicked","renderImgs","Main","handleClick","phoneSelected","handleBackClick","phoneAdded","addItem","hasOwnProperty","objectSpread","defineProperty","bind","assertThisInitialized","removeItem","event","target","components_Filter","components_Cart","components_Viewer","Fragment","components_Catalog","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mRA0BeA,EAxBA,SAACC,GAAD,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,oBAEEF,EAAAC,EAAAC,cAAA,SACIE,eAAa,cACbC,SAAUN,EAAMO,eAGtBN,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,UACIE,eAAa,cACbC,SACIN,EAAMQ,aAGVP,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,gBACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,OAAd,sBCEGC,EApBF,SAACV,GAAD,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACVO,OAAOC,QAAQZ,EAAMa,MAAMC,IAAI,SAAAC,GAAA,IAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAI,EAAA,GAAEG,EAAFF,EAAA,GAAQG,EAARH,EAAA,UAC/Bf,EAAAC,EAAAC,cAAA,MAAIiB,IAAKF,EAAOC,EACZf,UAAU,aACXc,EAFH,MAEYC,EACVlB,EAAAC,EAAAC,cAAA,UACIC,UAAU,eACViB,QAAU,WACRrB,EAAMsB,cAAcJ,KAH1B,WC2BKK,MAnCf,SAAevB,GAAO,IACdwB,EAAuDxB,EAAvDwB,GAAIX,EAAmDb,EAAnDa,KAAMY,EAA6CzB,EAA7CyB,MAAOC,EAAsC1B,EAAtC0B,QAASC,EAA6B3B,EAA7B2B,cAAeC,EAAc5B,EAAd4B,WAChD,OACG3B,EAAAC,EAAAC,cAAA,MACCC,UAAU,YACPC,eAAa,gBACbwB,gBAAeL,GAEbvB,EAAAC,EAAAC,cAAA,KACEkB,QAASM,EACTG,KAAM,aAAejB,EACrBT,UAAU,QACVC,eAAa,gBAEdJ,EAAAC,EAAAC,cAAA,OAAK4B,IAAKlB,EAAMmB,IAAKP,KAEtBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVC,eAAa,cACbgB,QAAWO,GAHb,QAQF3B,EAAAC,EAAAC,cAAA,KACEkB,QAASM,EACTG,KAAM,aAAcjB,EACpBR,eAAa,gBACbQ,GACFZ,EAAAC,EAAAC,cAAA,SAAIuB,6BChCRO,EAAU,4DA8BDC,EA5BO,CACdC,OADc,eAAAC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAApC,EAAAqC,KAAA,SAAAC,IAAA,IAAAzB,EAAA0B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAX,EAAApC,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAtC,EAAAiC,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GACsB,GADtBP,EAAA1B,EACL2B,aADK,IAAAD,EACG,GADHA,EAAAE,EAAA5B,EACO6B,aADP,IAAAD,EACe,GADfA,EAAAQ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIOG,OAAOC,MAAMxB,EAAU,gBAJ9B,cAIVa,EAJUK,EAAAO,KAAAP,EAAAE,KAAA,EAKDP,EAASa,OALR,OAKhBd,EALgBM,EAAAO,KAAAP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAOhBN,EAAS,GAPO,QASZE,EAAiBF,EAAOgB,OAAO,SAACC,GACpC,OAAOA,EAAMjD,KAAKkD,cAAcC,SAAStB,EAAMqB,iBAV/BZ,EAAAc,GAYVrB,EAZUO,EAAAE,KAaX,QAbWF,EAAAc,GAAA,GAgBX,SAhBWd,EAAAc,GAAA,2BAcdlB,EAAemB,KAAK,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAEkE,IAAMD,EAAEC,MAd1BjB,EAAAkB,OAAA,2BAiBdtB,EAAemB,KAAK,SAAChE,EAAGiE,GAAJ,OAAUjE,EAAEW,KAAKyD,cAAcH,EAAEtD,QAjBvCsC,EAAAkB,OAAA,2BAAAlB,EAAAkB,OAAA,SAqBXtB,GArBW,yBAAAI,EAAAoB,SAAA/B,EAAA,2CAAAJ,EAAAoC,MAAAC,KAAAxB,YAAA,GAuBpByB,QAvBoB,SAuBZlD,GACN,OAAOgC,OAAOC,MAAMxB,EAAU,WAAaT,EAAK,SAC7CmD,KAAK,SAAC7B,GAAD,OAAcA,EAASa,WC0BpBiB,cAhDd,SAAAA,EAAY5E,GAAO,IAAA6E,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAA8D,KAAAG,IACZC,EAAAlE,OAAAoE,EAAA,EAAApE,CAAA8D,KAAA9D,OAAAqE,EAAA,EAAArE,CAAAiE,GAAAK,KAAAR,KAAMzE,KACDkF,MAAQ,CACTC,OAAQ,IAHAN,mFAOZJ,KAAKtC,sDAILsC,KAAKtC,0CAGD,IAAAiD,EAAAX,KACJvC,EAAcC,OAAOsC,KAAKzE,MAAM6D,QAAQc,KAAK,SAAAU,GACzCD,EAAKE,SAAS,CACVH,OAAQE,6CAKL,IAAAE,EAC6Bd,KAAKzE,MAArCwF,EADGD,EACHC,eAAgBC,EADbF,EACaE,aAC3B,OAAQhB,KAAKS,MAAMC,OAAOrE,IAAI,SAACgD,GAC5B,OACI7D,EAAAC,EAAAC,cAACuF,EAAD,CACClE,GAAMsC,EAAMtC,GACTJ,IAAO0C,EAAMtC,GACbX,KAAQiD,EAAMjD,KACdY,MAASqC,EAAM6B,SACfjE,QAAWoC,EAAMpC,QACjBC,cAAiB,WACb6D,EAAe1B,EAAMtC,KAEzBI,WAAc,WACV6D,EAAa3B,EAAMjD,4CAQlC,OAAOZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUqE,KAAKmB,uBA7CnBC,IAAMC,WCiFbC,cAjFd,SAAAA,EAAY/F,GAAO,IAAA6E,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAA8D,KAAAsB,IACZlB,EAAAlE,OAAAoE,EAAA,EAAApE,CAAA8D,KAAA9D,OAAAqE,EAAA,EAAArE,CAAAoF,GAAAd,KAAAR,KAAMzE,KAEDkF,MAAQ,CACZc,UAAW,GACXlC,MAAQ,CACRtC,GAAK,GACRyE,OAAS,GACTpF,KAAO,GACPqF,YAAc,KATArB,2EAcPc,GACRlB,KAAKa,SAAS,CACbU,UAAWL,gDAIO,IAAAP,EAAAX,KACjBjD,EAAMiD,KAAKzE,MAAXwB,GACCU,EAAcwC,QAAQlD,GAAImD,KAAK,SAAAU,GAC3BD,EAAKE,SAAS,CACbxB,MAAOuB,EACJW,UAAWX,EAAKY,OAAO,4CAKtB,IAAAE,EAAA1B,KACf,OAAQA,KAAKS,MAAMpB,MAAMmC,OAAOnF,IAAI,SAACsF,EAAKC,GACpC,OACGpG,EAAAC,EAAAC,cAAA,MAAIiB,IAAM,MAAQiF,GACnBpG,EAAAC,EAAAC,cAAA,OACI6B,IAAKoE,EACLrE,IAAK,OACL1B,eAAa,gBACbe,IAAO,MAAQ+E,EAAKjB,MAAMoB,QAC1BjF,QAAS,WACN8E,EAAKI,YAAYH,0CAQxB,IAAAI,EACoB/B,KAAKS,MAAMpB,MAAhCjD,EADC2F,EACD3F,KAAMqF,EADLM,EACKN,YADLX,EAE8Bd,KAAKzE,MAApCyG,EAFClB,EAEDkB,cAAehB,EAFdF,EAEcE,aACnB,OACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,OACCC,UAAU,QACV2B,IAAKlB,EACCmB,IAAKyC,KAAKS,MAAMc,UAChB3F,eAAa,gBAEpBJ,EAAAC,EAAAC,cAAA,UACOE,eAAa,cAChBgB,QAASoF,GAFb,QAKAxG,EAAAC,EAAAC,cAAA,UACIE,eAAa,cACVgB,QAAW,WACJoE,EAAa5E,KAH3B,iBAOGZ,EAAAC,EAAAC,cAAA,UAAKU,GACLZ,EAAAC,EAAAC,cAAA,SAAI+F,GACJjG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACTqE,KAAKiC,sBA3EIb,IAAMC,WCwHZa,qBAlHb,SAAAA,IAAc,IAAA9B,EAAA,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAA8D,KAAAkC,IACd9B,EAAAlE,OAAAoE,EAAA,EAAApE,CAAA8D,KAAA9D,OAAAqE,EAAA,EAAArE,CAAAgG,GAAA1B,KAAAR,QA4DAmC,YAAc,SAAApF,GACZqD,EAAKS,SAAS,CACRuB,cAAgBrF,KA/DVqD,EAmEdiC,gBAAkB,WAChBjC,EAAKS,SAAS,CACRuB,cAAgB,MAlExBhC,EAAKK,MAAQ,CACXrB,OAAS,CACPjB,MAAQ,OACRF,MAAQ,IAEVmE,cAAgB,KAChBE,WAAa,IAGflC,EAAKmC,QAAU,SAAClD,GACd,IAAIuC,EAAIxB,EAAKK,MAAM6B,WAAWjD,GACxBe,EAAKK,MAAM6B,WAAWE,eAAenD,KACxCuC,EAAI,KAEJA,EACAxB,EAAKS,SAAU,CACbyB,WAAUpG,OAAAuG,EAAA,EAAAvG,CAAA,GACNkE,EAAKK,MAAM6B,WADLpG,OAAAwG,EAAA,EAAAxG,CAAA,GAEPmD,EAAUuC,OAIpBxB,EAAKtE,YAAcsE,EAAKtE,YAAY6G,KAAjBzG,OAAA0G,EAAA,EAAA1G,CAAAkE,IACnBA,EAAKrE,YAAcqE,EAAKrE,YAAY4G,KAAjBzG,OAAA0G,EAAA,EAAA1G,CAAAkE,IAErBA,EAAKyC,WAAa,SAACxD,GACb,IAAIuC,EAAIxB,EAAKK,MAAM6B,WAAWjD,KAChCuC,EACExB,EAAKK,MAAM6B,WAAWE,eAAenD,IACpCe,EAAKS,SAAU,CACXyB,WAAUpG,OAAAuG,EAAA,EAAAvG,CAAA,GACNkE,EAAKK,MAAM6B,WADLpG,OAAAwG,EAAA,EAAAxG,CAAA,GAEPmD,EAAUuC,MAGT,IAANA,WACKxB,EAAKK,MAAM6B,WAAWjD,GAC9Be,EAAKS,SAAUT,EAAKK,SAxCVL,2EA6CF0C,GACV9C,KAAKa,SAAU,CACbzB,OAAMlD,OAAAuG,EAAA,EAAAvG,CAAA,GACD8D,KAAKS,MAAMrB,OADV,CAEFnB,MAAQ6E,EAAMC,OAAO/G,8CAIjB8G,GACV9C,KAAKa,SAAU,CACbzB,OAAMlD,OAAAuG,EAAA,EAAAvG,CAAA,GACD8D,KAAKS,MAAMrB,OADV,CAEFjB,MAAQ2E,EAAMC,OAAO/G,2CAiB7B,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACsH,EAAD,CACElH,YAAekE,KAAKlE,YACpBC,YAAeiE,KAAKjE,cAEtBP,EAAAC,EAAAC,cAACuH,EAAD,CACE7G,KAAQ4D,KAAKS,MAAM6B,WACnBzF,cAAiBmD,KAAK6C,cAI1BrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdqE,KAAKS,MAAM2B,cACT5G,EAAAC,EAAAC,cAACwH,EAAD,CACGnG,GAAMiD,KAAKS,MAAM2B,cACjBJ,cAAiBhC,KAAKqC,gBACtBrB,aAAgBhB,KAAKuC,UAGzB/G,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0H,SAAA,KACA3H,EAAAC,EAAAC,cAAC0H,EAAD,CACErC,eAAkBf,KAAKmC,YACvBnB,aAAgBhB,KAAKuC,QACrBnD,OAAUY,KAAKS,MAAMrB,qBAvGhBgC,IAAMC,YCILgC,QACW,cAA7BtE,OAAOuE,SAASC,UAEe,UAA7BxE,OAAOuE,SAASC,UAEhBxE,OAAOuE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlI,EAAAC,EAAAC,cAACiI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9D,KAAK,SAAA+D,GACjCA,EAAaC","file":"static/js/main.577ccda6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => (\n    <div className=\"filter\">\n      <p>\n        Search :   \n        <input \n            data-element=\"query-field\" \n            onChange={props.queryChange}\n        ></input>\n      </p>\n      <p>\n        Sort by : \n        <select \n            data-element=\"order-field\"\n            onChange = {\n                props.orderChange\n            }\n        >\n            <option value=\"name\">Alphabetical</option>\n            <option value=\"age\">Newest</option>\n        </select>\n      </p>\n    </div>\n);\n\nexport default Filter;","import React from 'react';\n\nconst Cart = (props) => (\n  <div className=\"cart\">\n    <p>Shopping Cart</p>\n    <ul className=\"cart_ul\">\n      { Object.entries(props.name).map(([item, index]) => (\n        <li key={item + index} \n            className=\"cart_item\">\n          {item} - {index}\n          <button \n              className=\"btn cart_btn\"\n              onClick ={()=> {\n                props.onDeletePhone(item)}}\n          >\n          X</button>\n        </li>\n      )) }\n    </ul>\n  </div>\n);\n\nexport default Cart;","import React from 'react';\n\nfunction Phone(props) {\n\tconst {id, name, image, snippet, onLinkClicked, onAddClick} = props;\n\treturn(\n  \t\t<li \n  \t\t\tclassName=\"thumbnail\"\n        data-element=\"phone-element\"\n        data-phone-id={id}\n        >\n          <a\n            onClick={onLinkClicked}\n            href={\"#!/phones/\" + name}\n            className=\"thumb\" \n            data-element=\"details-link\"\n          >\n          \t<img alt={name} src={image}/>\n          </a>\n          <div className=\"phones__btn-buy-wrapper\">\n            <button \n              className=\"btn btn-success\"\n              data-element=\"add-to-cart\"\n              onClick = {onAddClick}\n            >\n                Add\n            </button>\n          </div>\n          <a\n            onClick={onLinkClicked}\n            href={\"#!/phones/\"+ name}\n            data-element=\"details-link\"\n          >{name}</a>\n          <p>{snippet}</p>\n        </li>\n    )\n}\n\nexport default Phone;","const API_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst PhonesService = {\n  async getAll({ query = '', order = '' } = {}) {\n    let result;\n    try {\n      const response = await window.fetch(API_URL + '/phones.json');\n      result = await response.json();\n    } catch (error) {\n      result = [];\n    }\n    const filteredResult = result.filter((phone) => {\n      return phone.name.toLowerCase().includes(query.toLowerCase());\n    });\n    switch (order) {\n      case 'age':\n        filteredResult.sort((a, b) => a.age - b.age);\n        break;\n      case 'name':\n        filteredResult.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      default:\n    }\n    return filteredResult;\n  },\n  getById(id) {\n    return window.fetch(API_URL + '/phones/' + id + '.json')\n      .then((response) => response.json())\n  }\n}\nexport default PhonesService;","import React from 'react';\nimport Phone from './Phone';\nimport PhonesService from './API';\n\nclass Catalog extends React.Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            phones: []\n        }\n    }\n    componentDidMount() {\n        this.getAll();\n    }\n\n    componentDidUpdate() {\n        this.getAll();\n    }\n\n    getAll(){\n        PhonesService.getAll(this.props.filter).then(data => {\n            this.setState({\n                phones: data,\n            })\n        })\n    }\n\n    renderPhones() {\n        const { onPhoneClicked, onAddClicked} = this.props;\n    \treturn (this.state.phones.map((phone) => {\n      \t\treturn (\n            <Phone\n            \tid = {phone.id}\n                key = {phone.id}\n                name = {phone.name}\n                image = {phone.imageUrl}\n                snippet = {phone.snippet}\n                onLinkClicked = {() => {\n                    onPhoneClicked(phone.id)\n                }}\n                onAddClick = {() => {\n                    onAddClicked(phone.name)\n                }}\n            />\n            )\n        }))\n    }\n\n\trender() {\n\t    return <ul className=\"phones\">{this.renderPhones()}</ul>\n\t}\n}\n\nexport default Catalog;","import React from 'react';\nimport PhonesService from './API';\n\nclass Viewer extends React.Component {\n\tconstructor(props) {\n        super(props);\n\n        this.state = {\n        \tmainImage: \"\",\n        \tphone : {\n        \tid : \"\",\n    \t\timages : [],\n    \t\tname : \"\",\n\t\t    description : \"\"\n        \t}\n        }\n    }\n\n\tselectImage(imageUrl) {\n\t    this.setState({\n\t    \tmainImage: imageUrl,\n\t    });\n\t}\n\n    componentDidMount() {\n\t\tlet {id} = this.props;\n        PhonesService.getById(id).then(data => {\n            this.setState({\n            \tphone: data,\n                mainImage: data.images[0]\n  \t\t \t})\n        })\n    }\n\n    renderImgs() {\n\t\treturn (this.state.phone.images.map((img, i) => {\n      \t\treturn (\n\t          <li key ={'img' + i}>\n        \t\t<img \n\t\t            src={img}\n\t\t            alt= \"main\"\n\t\t            data-element=\"small-preview\"\n\t\t            key = {\"img\" + this.state.phoneId}\n\t\t            onClick={() => {\n              \t\t\tthis.selectImage(img)\n            \t\t}}>\n\t\t        </img>\n\t\t       </li>\n\t\t\t)\n\t\t}))\n    }\n\n\trender() {\n\t\tconst {name, description} = this.state.phone;\n\t\tconst {onBackClicked, onAddClicked} = this.props;\n\t    return (\n\t    \t<div className=\"phone-viewer\">\n\t\t\t\t<img \n\t\t\t\t\tclassName=\"phone\"\n\t\t\t\t\talt={name} \n\t\t\t        src={this.state.mainImage}\n\t\t\t        data-element=\"big-preview\"\n\t\t\t    ></img>\n\t\t\t\t<button \n\t\t        \tdata-element=\"back-button\" \n\t\t\t    \tonClick={onBackClicked}>\n\t\t\t        Back\n\t\t\t    </button>\n\t\t\t\t<button\n\t\t\t\t    data-element=\"add-to-cart\"  \n\t\t\t        onClick = {() => {\n\t\t                onAddClicked(name)}}>\n\t\t            Add to basket\n\t\t        </button>\n\n\t\t\t    <h1>{name}</h1>\n\t\t\t    <p>{description}</p>\n\t\t\t    <ul className=\"phone-thumbs\">\n\t\t\t        {this.renderImgs()}\n\t\t\t    </ul>\n\t\t    </div>\n\t    )\n\t}\n}\n\nexport default Viewer","import React from 'react';\nimport Filter from './components/Filter';\nimport Cart from './components/Cart';\nimport Catalog from './components/Catalog';\nimport Viewer from './components/Viewer';\n\nimport './App.css';\n\nclass Main extends React.Component {\n  constructor() {\n  super();\n\n  this.state = {\n    filter : {\n      order : \"name\",\n      query : \"\"\n    },\n    phoneSelected : null,\n    phoneAdded : {}\n    };\n\n  this.addItem = (phone) => {\n    let i = this.state.phoneAdded[phone];\n     if (!this.state.phoneAdded.hasOwnProperty(phone)) {\n       i = 0;\n     } \n     ++i;\n       this.setState ({\n         phoneAdded : {\n          ...this.state.phoneAdded,\n           [phone] :  i} \t\t\n       })\n  };\n\n  this.queryChange = this.queryChange.bind(this);\n  this.orderChange = this.orderChange.bind(this);\n\nthis.removeItem = (phone) => {\n      let i = this.state.phoneAdded[phone];\n  --i;\n  if (this.state.phoneAdded.hasOwnProperty(phone)){\n       this.setState ({\n           phoneAdded : {\n            ...this.state.phoneAdded,\n             [phone] :  i} \t\t\n         })\n     } \n     if (i === 0) {\n       delete this.state.phoneAdded[phone];\n      this.setState (this.state)\n    }   \n}\n}\n\n  queryChange(event) {\n    this.setState ({\n      filter : {\n        ...this.state.filter,\n          query : event.target.value\n    }})\n  };\n\n  orderChange(event) {\n    this.setState ({\n      filter : {\n        ...this.state.filter,\n          order : event.target.value\n    }})\n  };\n\n  handleClick = id => {\n    this.setState({\n          phoneSelected : id\n    })\n  }\n\n  handleBackClick = ()=> {\n    this.setState({\n          phoneSelected : \"\"\n    })\n  }\n\nrender(){\n  return(\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n\n          <div className=\"col-md-2\">\n            <Filter\n              queryChange = {this.queryChange}\n              orderChange = {this.orderChange}\n            />\n            <Cart \n              name = {this.state.phoneAdded} \n              onDeletePhone = {this.removeItem}\n            />\n          </div>\n\n          <div className=\"col-md-10\">\n          {this.state.phoneSelected ? \n            (<Viewer \n                id = {this.state.phoneSelected}\n                onBackClicked = {this.handleBackClick}\n                onAddClicked = {this.addItem}\n              />\n              ) : (\n            <>\n            <Catalog \n              onPhoneClicked = {this.handleClick}\n              onAddClicked = {this.addItem}\n              filter = {this.state.filter}\n               /></>)\n            }\n          </div>\n\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}